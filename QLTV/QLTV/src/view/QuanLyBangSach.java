/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.DBConnection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import model.Book;

import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Microsoft Windows
 */
public class QuanLyBangSach extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form QuanLyNhanVien
     */
    public QuanLyBangSach() {
        initComponents();
        setLocationRelativeTo(null);
        btnThoat.addActionListener(this);
        loadcomobox();
     loadcomobox2();
        loaddata1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        jLabel6 = new javax.swing.JLabel();
        sad = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfMaSach = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ddas = new javax.swing.JLabel();
        tfTacGia = new javax.swing.JTextField();
        tfTenSach = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMain = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        tfNXB = new javax.swing.JTextField();
        btnquaylai = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfnamxuatban = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tfgiatien = new javax.swing.JTextField();
        combox = new javax.swing.JComboBox();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tfnhapfile = new javax.swing.JTextField();
        combox2 = new javax.swing.JComboBox();

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        sad.setText("Mã Sách");

        jLabel2.setText("Thể Loại");

        jLabel3.setText("Tác Giả");

        ddas.setText("Tên Sách");

        tfTacGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTacGiaActionPerformed(evt);
            }
        });

        tfTenSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTenSachActionPerformed(evt);
            }
        });

        tableMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableMain);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        jLabel5.setText("Nhà Xuất Bản");

        tfNXB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNXBActionPerformed(evt);
            }
        });

        btnquaylai.setText("Làm Mới");
        btnquaylai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnquaylaiActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel7.setText("QUẢN LÝ BẢNG SÁCH");

        jLabel8.setText("Năm Xuất Bản");

        tfnamxuatban.setText(" ");

        jLabel10.setText("Giá Tiền");

        tfgiatien.setText(" ");

        combox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        combox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboxActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Tìm Kiếm");

        jButton1.setText("Xuất");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Nhập");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        combox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Thống Kê" }));
        combox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(104, 104, 104))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sad)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tfgiatien, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                                            .addComponent(tfNXB)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel2))
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(combox, 0, 209, Short.MAX_VALUE)
                                            .addComponent(tfMaSach))))
                                .addGap(111, 111, 111)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ddas)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel3))))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfTenSach)
                            .addComponent(tfTacGia)
                            .addComponent(tfnamxuatban))
                        .addGap(62, 62, 62))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(btnThem)
                                .addGap(81, 81, 81)
                                .addComponent(btnXoa)
                                .addGap(112, 112, 112)
                                .addComponent(btnquaylai)
                                .addGap(84, 84, 84)
                                .addComponent(btnThoat)
                                .addGap(161, 161, 161)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(tfnhapfile, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(44, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1)
                        .addGap(59, 59, 59)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(combox2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(115, 115, 115))))
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ddas)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(4, 4, 4)))
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sad, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(tfnamxuatban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(tfNXB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfgiatien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(10, 10, 10)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnquaylai)
                    .addComponent(btnThoat)
                    .addComponent(jButton2)
                    .addComponent(tfnhapfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(combox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfTenSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTenSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTenSachActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int result=JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn không ? Khi có Mã Sách sẽ bị xóa trong hệ thống Mượn Trả ");
        if(result==0){
    
        int position = tableMain.getSelectedRow();
        String data = tableMain.getModel().getValueAt(position, 0).toString();
      
         try {
              
            Connection connection = DBConnection.getConnection();
            String query="DELETE FROM DBO.chitietmuon20173329 WHERE MASACH20173329=?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, data);
            ps.executeUpdate();
            
          
           
               
               String query1 = "DELETE dbo.[BANGSACH20173329] WHERE MASACH20173329= ?";
                       
               PreparedStatement ps1 = connection.prepareStatement(query1);
               ps1.setString(1,data);
          
               ps1.executeUpdate();
               showDuLieu();
               DBConnection.closeConnection(connection);
               JOptionPane.showMessageDialog(null, "xoa thanh cong");
           } catch (SQLException ex) {
             ex.printStackTrace();
           }}
        
    }//GEN-LAST:event_btnXoaActionPerformed

    
    
    private void showDuLieu(){
        try {
            tableMain.removeAll();
            String[] arr= {"Mã Sách","Tên Sách","Tên Tác Giả","NXB","Thể Loại","Gia Tien","Nam XB"};
           
            DefaultTableModel model = new DefaultTableModel(arr, 0);
             Connection connection = DBConnection.getConnection();
            String query = "SELECT * FROM dbo.BANGSACH20173329";
            PreparedStatement ps = connection.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                Vector vector = new Vector();
                vector.add(rs.getString("MASACH20173329"));
                vector.add(rs.getString("TENSACH20173329"));
                vector.add(rs.getString("TENTACGIA20173329"));
                vector.add(rs.getString("NXB20173329"));
                vector.add(rs.getString("THELOAI20173329"));
                  vector.add(rs.getString("GiaTien20173329"));
                    vector.add(rs.getString("NamXuatBan20173329"));
                model.addRow(vector);
            }
            DBConnection.closeConnection(connection);
            tableMain.setModel(model);
            
             tableMain.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

                @Override
                public void valueChanged(ListSelectionEvent e) {
                    if (tableMain.getSelectedRow()>=0) {
                        tfMaSach.setText(tableMain.getValueAt(tableMain.getSelectedRow(),0)+"");
                     
                        tfTenSach.setText(tableMain.getValueAt(tableMain.getSelectedRow(),1)+"");
                        tfTacGia.setText(tableMain.getValueAt(tableMain.getSelectedRow(),2)+"");
                        tfNXB.setText(tableMain.getValueAt(tableMain.getSelectedRow(),3)+"");
                          combox.setSelectedItem(tableMain.getModel().getValueAt(tableMain.getSelectedRow(), 4)+"");
                       tfgiatien.setText(tableMain.getValueAt(tableMain.getSelectedRow(),5)+"");
                         tfnamxuatban.setText(tableMain.getValueAt(tableMain.getSelectedRow(),6)+"");
                    }
                }
            });
            
            
        
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    
    
    }
    public void loadcomobox(){
        try {
            Connection connection = DBConnection.getConnection();
            PreparedStatement ps=connection.prepareStatement("select theloai20173329 from dbo.bangsach20173329 group by theloai20173329");
        ResultSet rs=ps.executeQuery();
            while (rs.next()) {
                combox.addItem(rs.getString("theloai20173329"));
                
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    private void reset(){
    tfMaSach.setText("");
    tfNXB.setText("");
    tfTacGia.setText("");
    tfTenSach.setText("");
    
    tfgiatien.setText("");
    tfnamxuatban.setText("");
    }
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        showDuLieu();
    }//GEN-LAST:event_formComponentShown
private boolean checkTrungMaSach(){
        try {
            Connection connection = DBConnection.getConnection();
            String query = "SELECT * FROM dbo.BANGSACH20173329 where MASACH20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tfMaSach.getText());
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }return false;
          
            
        
    
   
        
}
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
   
        if(tfMaSach.getText().equals("")){
           JOptionPane.showMessageDialog(rootPane, "maSAch chua thanh cong");
       tfMaSach.requestFocus();
       return;
       }
       else if(tfTacGia.getText().equals("")){
       JOptionPane.showMessageDialog(rootPane, "TAC GIa chua thanh cong");
       tfTacGia.requestFocus();
       return;}
       else if(tfNXB.getText().equals("")){
           JOptionPane.showMessageDialog(rootPane, "NXB chua thanh cong");
        tfNXB.requestFocus();
       return;}
       else if (tfTenSach.getText().equals("")){
       JOptionPane.showMessageDialog(rootPane, "TEN Sach chua thanh cong");
        tfTenSach.requestFocus();
       return;}
       else if(tfgiatien.getText().equals("")){JOptionPane.showMessageDialog(null, "them gia tien chua thanh cong");
       return;}
       else if(tfnamxuatban.getText().equals("")){JOptionPane.showMessageDialog(null, "them nam xuat ban thanh cong");
       return;}
       String masach=tfMaSach.getText();
       if(masach.length()!=5){
       JOptionPane.showMessageDialog(rootPane, "ma sach phai co 5 ki tu");
       tfMaSach.requestFocus();
       return;}
        try {
            String a1=tfMaSach.getText(0, 2);
            boolean a5=a1.equals("MS");
            boolean a2=Character.isDigit(masach.charAt(2));
            boolean a3=Character.isDigit(masach.charAt(3));
              boolean a4=Character.isDigit(masach.charAt(4));
              if((a2&&a3&&a4&&a5)==false){
                  JOptionPane.showMessageDialog(null, "nhap sai dinh dang mssach MSxxx");
                  return;
              }
        } catch (BadLocationException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }
       
      if(checkTrungMaSach()==true){
          JOptionPane.showMessageDialog(null,"ma sach da ton tai");
          tfMaSach.requestFocus();
          return;
          
      }
             
          try {
               Connection connection = DBConnection.getConnection();
               String query = "INSERT INTO dbo.[BANGSACH20173329](MASACH20173329, TENSACH20173329 , THELOAI20173329, TENTACGIA20173329, NXB20173329,giatien20173329,namxuatban20173329) "+
                       "VALUES(?,?,?,?,?,?,?)";
               PreparedStatement ps = connection.prepareStatement(query);
               ps.setString(1, tfMaSach.getText());
               ps.setString(2, tfTenSach.getText());
               ps.setString(3, (String)combox.getSelectedItem());
               ps.setString(4, tfTacGia.getText());
                ps.setString(5, tfNXB.getText());
               
                  ps.setString(6, tfgiatien.getText());
                    ps.setString(7, tfnamxuatban.getText());
               ps.executeUpdate();
               showDuLieu();
               DBConnection.closeConnection(connection);
               JOptionPane.showMessageDialog(null, "them thanh cong");
               reset();
           } catch (SQLException ex) {
             ex.printStackTrace();
           }
             
             
             
       
    }//GEN-LAST:event_btnThemActionPerformed
private void checktimkiemMASACH(){
     try {
    
            String[] arr= {"Mã Sách","Tên Sách","Tên Tác Giả","NXB","Thể Loại","Gia Tien","Nam XB"};
           
            DefaultTableModel model = new DefaultTableModel(arr, 0);
             Connection connection = DBConnection.getConnection();
             String query = "SELECT * FROM dbo.BANGSACH20173329 where MASACH20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tfMaSach.getText());
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                
               Vector vector = new Vector();
                vector.add(rs.getString("MASACH20173329"));
                vector.add(rs.getString("TENSACH20173329"));
                vector.add(rs.getString("TENTACGIA20173329"));
                vector.add(rs.getString("NXB20173329"));
                vector.add(rs.getString("THELOAI20173329"));
                  vector.add(rs.getString("GiaTien20173329"));
                    vector.add(rs.getString("NamXuatBan20173329"));
                model.addRow(vector);
            }
            DBConnection.closeConnection(connection);
            tableMain.setModel(model);
            
          
        
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }
     
}
private void checktimkiemTenSach(){
     try {
    
            String[] arr= {"Mã Sách","Tên Sách","Tên Tác Giả","NXB","Thể Loại","Gia Tien","Nam XB"};
           
            DefaultTableModel model = new DefaultTableModel(arr, 0);
             Connection connection = DBConnection.getConnection();
             String query = "SELECT * FROM dbo.BANGSACH20173329 where TENSACH20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tfTenSach.getText());
            ResultSet rs = ps.executeQuery();
           
            while(rs.next()){
               Vector vector = new Vector();
                vector.add(rs.getString("MASACH20173329"));
                vector.add(rs.getString("TENSACH20173329"));
                vector.add(rs.getString("TENTACGIA20173329"));
                vector.add(rs.getString("NXB20173329"));
                vector.add(rs.getString("THELOAI20173329"));
                  vector.add(rs.getString("GiaTien20173329"));
                    vector.add(rs.getString("NamXuatBan20173329"));
                model.addRow(vector);
            }
             
            DBConnection.closeConnection(connection);
            tableMain.setModel(model);
            
          
        
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }
     
}
private void checktimkiemTheLoai(){
     try {  
            String[] arr= {"Mã Sách","Tên Sách","Tên Tác Giả","NXB","Thể Loại","Gia Tien","Nam XB"};
           
            DefaultTableModel model = new DefaultTableModel(arr, 0);
             Connection connection = DBConnection.getConnection();
             String query = "SELECT * FROM dbo.BANGSACH20173329 where THELOAI20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, (String) combox.getSelectedItem());
           
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
               Vector vector = new Vector();
                vector.add(rs.getString("MASACH20173329"));
                vector.add(rs.getString("TENSACH20173329"));
                vector.add(rs.getString("TENTACGIA20173329"));
                vector.add(rs.getString("NXB20173329"));
                vector.add(rs.getString("THELOAI20173329"));
                  vector.add(rs.getString("GiaTien20173329"));
                    vector.add(rs.getString("NamXuatBan20173329"));
                model.addRow(vector);
            }
            DBConnection.closeConnection(connection);
            tableMain.setModel(model);
            
          
        
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }
     
}
private void checktimkiemNXB(){
     try {  
            String[] arr= {"Mã Sách","Tên Sách","Tên Tác Giả","NXB","Thể Loại","Gia Tien","Nam XB"};
           
            DefaultTableModel model = new DefaultTableModel(arr, 0);
             Connection connection = DBConnection.getConnection();
             String query = "SELECT * FROM dbo.BANGSACH20173329 where NXB20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tfNXB.getText());
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
               Vector vector = new Vector();
                vector.add(rs.getString("MASACH20173329"));
                vector.add(rs.getString("TENSACH20173329"));
                vector.add(rs.getString("TENTACGIA20173329"));
                vector.add(rs.getString("NXB20173329"));
                vector.add(rs.getString("THELOAI20173329"));
                  vector.add(rs.getString("GiaTien20173329"));
                    vector.add(rs.getString("NamXuatBan20173329"));
                model.addRow(vector);
            }
            DBConnection.closeConnection(connection);
            tableMain.setModel(model);
            
          
        
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }
     
}
private void checktimkiemTacGia(){
      try {  
            String[] arr= {"Mã Sách","Tên Sách","Tên Tác Giả","NXB","Thể Loại","Gia Tien","Nam XB"};
           
            DefaultTableModel model = new DefaultTableModel(arr, 0);
             Connection connection = DBConnection.getConnection();
             String query = "SELECT * FROM dbo.BANGSACH20173329 where TENTACGIA20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tfTacGia.getText());
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                Vector vector = new Vector();
                vector.add(rs.getString("MASACH20173329"));
                vector.add(rs.getString("TENSACH20173329"));
                vector.add(rs.getString("TENTACGIA20173329"));
                vector.add(rs.getString("NXB20173329"));
                vector.add(rs.getString("THELOAI20173329"));
                  vector.add(rs.getString("GiaTien20173329"));
                    vector.add(rs.getString("NamXuatBan20173329"));
                model.addRow(vector);
            }
            DBConnection.closeConnection(connection);
            tableMain.setModel(model);
            
          
        
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }
     
}

private void checktimkiemNamXB(){
      try {  
            String[] arr= {"Mã Sách","Tên Sách","Tên Tác Giả","NXB","Thể Loại","Gia Tien","Nam XB"};
           
            DefaultTableModel model = new DefaultTableModel(arr, 0);
             Connection connection = DBConnection.getConnection();
             String query = "SELECT * FROM dbo.BANGSACH20173329 where namxuatban20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tfnamxuatban.getText());
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                Vector vector = new Vector();
                vector.add(rs.getString("MASACH20173329"));
                vector.add(rs.getString("TENSACH20173329"));
                vector.add(rs.getString("TENTACGIA20173329"));
                vector.add(rs.getString("NXB20173329"));
                vector.add(rs.getString("THELOAI20173329"));
                  vector.add(rs.getString("GiaTien20173329"));
                    vector.add(rs.getString("NamXuatBan20173329"));
                model.addRow(vector);
            }
            DBConnection.closeConnection(connection);
            tableMain.setModel(model);
            
          
        
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }
     
}
    private void btnquaylaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnquaylaiActionPerformed
        // TODO add your handling code here:
        showDuLieu();
        reset();
    }//GEN-LAST:event_btnquaylaiActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThoatActionPerformed

    private void tfNXBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNXBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNXBActionPerformed

    private void tfTacGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTacGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTacGiaActionPerformed

    private void comboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboxActionPerformed
      // TODO add your handling code here:
    }//GEN-LAST:event_comboxActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String a=(String) jComboBox1.getSelectedItem();
      
       if(a.equals("Tim Kiem Theo Ten")){
           if(tfTenSach.getText().equals("")){
               JOptionPane.showMessageDialog(null, "chua nhap ten ban tim kiem"); return;}
       else{checktimkiemTenSach();return;}
       }else if(a.equals("Tim Kiem Theo MaSach")){if(tfMaSach.getText().equals("")){
       JOptionPane.showMessageDialog(null, "chua nhap masach ban tim kiem");return;}
       else{
       checktimkiemMASACH(); return;}}
       else if (a.equals("Tim Kiem Theo TacGia")){
           if (tfTacGia.getText().equals("")){JOptionPane.showMessageDialog(null, "chua nhap ten tac gia ban can tim kiem"); return;
          
               
           }else{checktimkiemTacGia();return;}
       }
       else if (a.equals("Tim Kiem Theo NXB")){
           if (tfNXB.getText().equals("")){JOptionPane.showMessageDialog(null, "chua nhap NXB an can tim kiem");return;
               
           }else{checktimkiemNXB();}
}else if (a.equals("Tim Kiem Theo TheLoai")){if(combox.getSelectedItem().equals("")){
    JOptionPane.showMessageDialog(null, "chua chon the loai"); return;}
else{checktimkiemTheLoai(); return;}}
else if(a.equals("Tim Kiem Theo NamXB")){ if (tfnamxuatban.getText().equals("")) {
    JOptionPane.showMessageDialog(null, "chua nhap namXB ban can tim kiem"); return;
                          }else{checktimkiemNamXB();return;}
}
       reset();
    }//GEN-LAST:event_jComboBox1ActionPerformed


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
SimpleExcelWriter excelWriter = new SimpleExcelWriter();
		 
		List<Book> listBook = excelWriter.getListBook();
		String excelFilePath = "E:/BangSach.xls";
		 
		try {
			excelWriter.writeExcel(listBook, excelFilePath);
                        JOptionPane.showMessageDialog(null, "da xuat thanh cong ra E:/BangSach.xls");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			JOptionPane.showMessageDialog(null, "Đã Có lỗi Xảy ra vui lòng kiểm tra lại");
		}

               
    }//GEN-LAST:event_jButton1ActionPerformed

public class ReadExcelDemo {
 
   public  void main(String[] args) throws IOException {
  
       // Đọc một file XSL.
       FileInputStream inputStream = new FileInputStream(new File("C:/demo/employee.xls"));
  
       // Đối tượng workbook cho file XSL.
       HSSFWorkbook workbook = new HSSFWorkbook(inputStream);
 
  
       // Lấy ra sheet đầu tiên từ workbook
       HSSFSheet sheet = workbook.getSheetAt(1);
 
  
       // Lấy ra Iterator cho tất cả các dòng của sheet hiện tại.
       Iterator<Row> rowIterator = sheet.iterator();
 
       while (rowIterator.hasNext()) {
           Row row = rowIterator.next();
     
           // Lấy Iterator cho tất cả các cell của dòng hiện tại.
           Iterator<Cell> cellIterator = row.cellIterator();
 
           while (cellIterator.hasNext()) {
               Cell cell = cellIterator.next();
  
               // Đổi thành getCellType() nếu sử dụng POI 4.x
               CellType cellType = cell.getCellType();
 
               switch (cellType) {
               case _NONE:
                   System.out.print("");
                   System.out.print("\t");
                   break;
               case BOOLEAN:
                   System.out.print(cell.getBooleanCellValue());
                   System.out.print("\t");
                   break;
               case BLANK:
                   System.out.print("");
                   System.out.print("\t");
                   break;
               case FORMULA:
       
                   // Công thức
                   System.out.print(cell.getCellFormula());
                   System.out.print("\t");
                    
                   FormulaEvaluator evaluator = workbook.getCreationHelper().createFormulaEvaluator();
         
                   // In ra giá trị từ công thức
                   System.out.print(evaluator.evaluate(cell).getNumberValue());
                   break;
               case NUMERIC:
                   System.out.print(cell.getNumericCellValue());
                   System.out.print("\t");
                   break;
               case STRING:
                   System.out.print(cell.getStringCellValue());
                   System.out.print("\t");
                   break;
               case ERROR:
                   System.out.print("!");
                   System.out.print("\t");
                   break;
               }
 
           }
           System.out.println("");
       }
   }
 
}

    public class SimpleExcelReader {

    public void main(String[] args) throws IOException {
	    String excelFilePath = "E:/NiceJavaBooks.xls";
	    SimpleExcelReader reader = new SimpleExcelReader();
	    List<Book> listBooks = reader.readBooksFromExcelFile(excelFilePath);
	    System.out.println(listBooks);
	}

	private Object getCellValue(Cell cell) {
           CellType celltype = cell.getCellType();
           Object cellvalue = null;
	    switch (celltype) {
	    case STRING:
               return cell.getStringCellValue();
	      
	 
	    case BOOLEAN:
	        return cell.getBooleanCellValue();
	 
            case NUMERIC :
	        return cell.getNumericCellValue();
            case _NONE:
            case BLANK :
            case ERROR:
                break;
            default:break;
            }
	 
	    return cellvalue;
	}
	
	public List<Book> readBooksFromExcelFile(String excelFilePath) throws IOException {
	    List<Book> listBooks = new ArrayList<>();
	    FileInputStream inputStream = new FileInputStream(new File(excelFilePath));
	 
	    Workbook workbook = getWorkbook(inputStream, excelFilePath);
	    Sheet firstSheet = workbook.getSheetAt(0);
	    Iterator<Row> iterator = firstSheet.iterator();
	     
	    if(iterator.hasNext()) {
	        Row nextRow = iterator.next();
           
	        Iterator<Cell> cellIterator = nextRow.cellIterator();      
	    }
	 while(iterator.hasNext()) {
	        Row nextRow = iterator.next();
           
	        Iterator<Cell> cellIterator = nextRow.cellIterator();
	        Book aBook = new Book();
	 
	        while (cellIterator.hasNext()) {
	            Cell nextCell = cellIterator.next();
	            int columnIndex = nextCell.getColumnIndex();
	 
	            switch (columnIndex) {
                        
                        
                        
	            case 0:
	                aBook.setMasach((String) getCellValue(nextCell));
	                break;
	            case 1:
	                aBook.setTensach((String) getCellValue(nextCell));
	                break;
	            case 2:
	                aBook.setTacgia((String) getCellValue(nextCell));
	                break;
                    case 3:
	                aBook.setNXB((String) getCellValue(nextCell));
	                break;
                    case 4:
	                aBook.setTheloai((String) getCellValue(nextCell));
	                break;
                       case 5:
	                aBook.setGiatien((int) (double) getCellValue(nextCell));
	                break;
                            case 6:
	                aBook.setNamXB((String) getCellValue(nextCell));
	                break;
	            
                    
                    
                    }
	 
	 
	        }
	        listBooks.add(aBook);
	    }
	    workbook.close();
	    inputStream.close();
	 
	    return listBooks;
	}
	
    //Được sử dụng để có thể đọc được cả định dạng .xls và xlsx
	private Workbook getWorkbook(FileInputStream inputStream, String excelFilePath)
	        throws IOException {
	    Workbook workbook = null;
	 
	    if (excelFilePath.endsWith("xlsx")) {
	        workbook = new XSSFWorkbook(inputStream);
	    } else if (excelFilePath.endsWith("xls")) {
	        workbook = new HSSFWorkbook(inputStream);
	    } else {
	        throw new IllegalArgumentException("The specified file is not Excel file");
	    }
	 
	    return workbook;
	}
}
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String excelFilePath = tfnhapfile.getText();
            SimpleExcelReader reader = new SimpleExcelReader();
            List<Book> listBooks;
            
        
            listBooks = reader.readBooksFromExcelFile(excelFilePath);
            for (Book aBook : listBooks) {
                Connection connection = DBConnection.getConnection();
            String query = "INSERT INTO dbo.[BANGSACH20173329](MASACH20173329, TENSACH20173329 , THELOAI20173329, TENTACGIA20173329, NXB20173329,giatien20173329,namxuatban20173329) "+
                    "VALUES(?,?,?,?,?,?,?)";
            PreparedStatement ps;
                try {
                    ps = connection.prepareStatement(query);
               
            ps.setString(1, aBook.getMasach());
            ps.setString(2, aBook.getTensach());
            ps.setString(3, aBook.getTheloai());
            ps.setString(4, aBook.getTacgia());
            ps.setString(5, aBook.getNXB());
            
            ps.setInt(6, aBook.getGiatien());
            ps.setString(7, aBook.getNamXB());
             
                    ps.executeUpdate();
                } catch (SQLException ex) {
                   JOptionPane.showMessageDialog(null, "Đã Trùng Mã Sách");
                }
            showDuLieu();
            DBConnection.closeConnection(connection);
           
           
            
            }
           
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "nhap dung duong dan file ");
        }
         
	    
    }//GEN-LAST:event_jButton2ActionPerformed
 public void loadcomobox2(){
       
                combox2.addItem("Thống Kê loại sách theo tên tác giả ");
                combox2.addItem("Thống Kê loại sách theo tên Năm XB ");
                combox2.addItem("Thống Kê loại sách theo tên Nhà XB ");
                combox2.addItem("Thống Kê Số Lượng các loại sách ");
                
           
    
 }
    private void combox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combox2ActionPerformed
 String a=(String) combox2.getSelectedItem();      
if(a.equals("Thống Kê loại sách theo tên tác giả ")) {new tktentacgia().setVisible(true); return;}
else if(a.equals("Thống Kê loại sách theo tên Năm XB ")){new tktheonam().setVisible(true); return ;}
else if(a.equals("Thống Kê loại sách theo tên Nhà XB ")){new tknxb().setVisible(true); return ;}
else if(a.equals("Thống Kê Số Lượng các loại sách ")){new tksolong().setVisible(true); return ;}


// TODO add your handling code here:
    }//GEN-LAST:event_combox2ActionPerformed

/**
 *
 * @author Microsoft Windows
 *//*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



/**
 *
 * @author Microsoft Windows
 */public class SimpleExcelWriter {

	public void main(String[] args) throws IOException {
		
		SimpleExcelWriter excelWriter = new SimpleExcelWriter();
		 
		List<Book> listBook = excelWriter.getListBook();
		String excelFilePath = "E:/BangSach.xls";
		 
                excelWriter.writeExcel(listBook, excelFilePath);
	}
    private CellStyle style;
	
	private Workbook getWorkbook(String excelFilePath)
	        throws IOException {
	    Workbook workbook = null;
	 
	    if (excelFilePath.endsWith("xlsx")) {
	        workbook = new XSSFWorkbook();
	    } else if (excelFilePath.endsWith("xls")) {
	        workbook = new HSSFWorkbook();
	    } else {
	        throw new IllegalArgumentException("The specified file is not Excel file");
	    }
	 
	    return workbook;
	}
	
	public void writeExcel(List<Book> listBook, String excelFilePath) throws IOException {
	    Workbook workbook = getWorkbook(excelFilePath);
	    Sheet sheet = workbook.createSheet();
	    createHeaderRow(sheet);
	    int rowCount = 0;
	 
	    for (Book aBook : listBook) {
	        Row row = sheet.createRow(++rowCount);
	        writeBook(aBook, row);
	    }
	 
	    try (FileOutputStream outputStream = new FileOutputStream(excelFilePath)) {
	        workbook.write(outputStream);
	    }
	}
	
	private void writeBook(Book aBook, Row row) {
	    Cell cell = row.createCell(0);
	   cell.setCellValue(aBook.getMasach());
	 
	    cell = row.createCell(1);
	    cell.setCellValue(aBook.getTensach());
	 
	    cell = row.createCell(2);
	    cell.setCellValue(aBook.getTacgia());
            cell=row.createCell(3);
            cell.setCellValue(aBook.getNXB());
            cell=row.createCell(4);
            cell.setCellValue(aBook.getTheloai());
            cell=row.createCell(5);
            cell.setCellValue(aBook.getGiatien());
            cell=row.createCell(6);
            cell.setCellValue(aBook.getNamXB());
	}
	
    //Có thể format được như in đậm, set font
	private void createHeaderRow(Sheet sheet) {
            
		 
	    CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
	    Font font = sheet.getWorkbook().createFont();
	    font.setBold(true);
	    font.setFontHeightInPoints((short) 16);
	    cellStyle.setFont(font);
	  
	    Row row = sheet.createRow(0);
            
          
          Cell  cell = row.createCell(0, CellType.STRING);
          cell.setCellValue("masach");
           cell.setCellStyle(style);
	     cell = row.createCell(1, CellType.STRING);
        cell.setCellValue("tensach");
        cell.setCellStyle(style);
	     cell = row.createCell(2, CellType.STRING);
        cell.setCellValue("tacgia");
        cell.setCellStyle(style);
	   cell = row.createCell(3, CellType.STRING);
        cell.setCellValue("nxb");
        cell.setCellStyle(style);
            cell = row.createCell(4, CellType.STRING);
        cell.setCellValue("theloai");
        cell.setCellStyle(style);
            
              cell = row.createCell(5, CellType.STRING);
        cell.setCellValue("giatien");
        cell.setCellStyle(style);
              cell = row.createCell(6, CellType.STRING);
        cell.setCellValue("namxuatban");
        cell.setCellStyle(style);
	}

	public List<Book> getListBook() {
             List<Book> listBook = new ArrayList<>();
                String sql = "select * from dbo.bangsach20173329";
                  java.sql.Connection connection=DBConnection.getConnection();
            try {
               
              
                PreparedStatement ps =connection.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while(rs.next()){
                    Book book= new Book();
                    book.setMasach(rs.getString("masach20173329"));
                    book.setTensach(rs.getString("tensach20173329"));
                    book.setTacgia(rs.getString("tentacgia20173329"));
                    book.setNXB(rs.getString("nxb20173329"));
                    book.setTheloai(rs.getString("theloai20173329"));
                    book.setGiatien(rs.getInt("giatien20173329"));
                    book.setNamXB(rs.getString("namxuatban20173329"));
                listBook.add(book);
                }
                connection.close();
                
               
                
                
            } catch (SQLException ex) {
                Logger.getLogger(SimpleExcelWriter.class.getName()).log(Level.SEVERE, null, ex);
            }
            return listBook;
	}

}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyBangSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyBangSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyBangSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyBangSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyBangSach().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnquaylai;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JComboBox combox;
    private javax.swing.JComboBox combox2;
    private javax.swing.JLabel ddas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel sad;
    private javax.swing.JTable tableMain;
    private javax.swing.JTextField tfMaSach;
    private javax.swing.JTextField tfNXB;
    private javax.swing.JTextField tfTacGia;
    private javax.swing.JTextField tfTenSach;
    private javax.swing.JTextField tfgiatien;
    private javax.swing.JTextField tfnamxuatban;
    private javax.swing.JTextField tfnhapfile;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource().equals(btnThoat)){
        btnTrangchu();
        }
    }
    public void loaddata1(){jComboBox1.addItem("Tim Kiem Theo Ten");
    jComboBox1.addItem("Tim Kiem Theo MaSach");
    jComboBox1.addItem("Tim Kiem Theo TheLoai");
    jComboBox1.addItem("Tim Kiem Theo TacGia");
    jComboBox1.addItem("Tim Kiem Theo NXB");
    jComboBox1.addItem("Tim Kiem Theo NamXB");
    
    }
    public void btnTrangchu(){
    new GDTrangChu().setVisible(true);
    this.dispose();
    }
   
}
