/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.DBConnection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;

/**
 *
 * @author Microsoft Windows
 */
public class GDThemBanDoc extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form GDThemBanDoc
     */
    public GDThemBanDoc() {
        initComponents();
        btnQuayLai.addActionListener(this);
        this.setLocationRelativeTo(null);
        load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void showDuLieu(){
        try {
            tableMain.removeAll();
            String[] arr= {"Mã Bạn Đọc ","Mã Tài Khoản","Tên Bạn Đọc" ,"Địa Chỉ","Số Điện Thoại","Ngày Sinh"};
           
            DefaultTableModel model = new DefaultTableModel(arr, 0);
             Connection connection = DBConnection.getConnection();
            String query = "SELECT * FROM dbo.BanDoc20173329";
            PreparedStatement ps = connection.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                Vector vector = new Vector();
                vector.add(rs.getString("MABANDOc20173329"));
                vector.add(rs.getString("mataikhoan20173329"));
                vector.add(rs.getString("tenbandoc20173329"));
                vector.add(rs.getString("diachi20173329"));
                vector.add(rs.getString("sodienthoai20173329"));
                vector.add(rs.getString("ngaysinh20173329"));
                model.addRow(vector);
            }
            DBConnection.closeConnection(connection);
            tableMain.setModel(model);
            tableMain.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

                @Override
                public void valueChanged(ListSelectionEvent e) {
                    if (tableMain.getSelectedRow()>=0) {
                        tfMaBanDoc.setText(tableMain.getValueAt(tableMain.getSelectedRow(),0)+"");
                        tfmataikhoan.setText(tableMain.getValueAt(tableMain.getSelectedRow(),1)+"");
                        tftenbandoc.setText(tableMain.getValueAt(tableMain.getSelectedRow(),2)+"");
                        tfdiachi.setText(tableMain.getValueAt(tableMain.getSelectedRow(),3)+"");
                        tfsodienthoai.setText(tableMain.getValueAt(tableMain.getSelectedRow(),4)+"");
                        tfngaysinh.setText(tableMain.getValueAt(tableMain.getSelectedRow(),5)+"");
                    }
                }
            });
            
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }}
  
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMain = new javax.swing.JTable();
        tfMaBanDoc = new javax.swing.JTextField();
        tfmataikhoan = new javax.swing.JTextField();
        tftenbandoc = new javax.swing.JTextField();
        tfdiachi = new javax.swing.JTextField();
        tfsodienthoai = new javax.swing.JTextField();
        tfngaysinh = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnQuayLai = new javax.swing.JButton();
        btndanhsachbandoc = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("  Bạn Đọc");

        tableMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableMain);

        tfMaBanDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMaBanDocActionPerformed(evt);
            }
        });

        tftenbandoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tftenbandocActionPerformed(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnQuayLai.setText("Quay Lại");
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        btndanhsachbandoc.setText("Danh Sách Bạn Đọc");
        btndanhsachbandoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndanhsachbandocActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Tìm Kiếm");

        jLabel3.setText("Mã Tài Khoản");

        jLabel4.setText("Mã Bạn Đọc");

        jLabel5.setText("Tên Bạn Đọc");

        jLabel6.setText("Địa Chỉ");

        jLabel7.setText("Số Điện Thoại");

        jLabel8.setText("Ngày Sinh");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tfmataikhoan, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                                        .addComponent(tfMaBanDoc)
                                        .addComponent(tftenbandoc)
                                        .addComponent(tfdiachi)
                                        .addComponent(tfsodienthoai))
                                    .addComponent(tfngaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 129, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(btndanhsachbandoc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnQuayLai)
                                .addGap(56, 56, 56))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfMaBanDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfmataikhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tftenbandoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfdiachi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfsodienthoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfngaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btndanhsachbandoc)
                            .addComponent(btnQuayLai))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfMaBanDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMaBanDocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMaBanDocActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
       
    }//GEN-LAST:event_formComponentShown

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            
            
            // TODO add your handling code here:
            if(tftenbandoc.getText().equals("")){
                JOptionPane.showMessageDialog(null, "chua nhap ten ban doc");
                tftenbandoc.requestFocus();return;
            }
            else if(tfdiachi.getText().equals("")){
                JOptionPane.showMessageDialog(null, "chua nhap dia chi");
                tfmataikhoan.requestFocus();
                return;
            }else if(tfmataikhoan.getText().equals("")){
                JOptionPane.showMessageDialog(null, "chua nhap ma tai khoan");
                tfmataikhoan.requestFocus();
                return;}
            else if (tfMaBanDoc.getText().equals("")){JOptionPane.showMessageDialog(null, "chua nhap ma ban doc");
            tfMaBanDoc.requestFocus();
            return;}
            else if (tfngaysinh.getText().equals("")){JOptionPane.showMessageDialog(null, "chua nhap ngay");tfngaysinh.requestFocus();
            return;}
            
            String mabandoc=tfMaBanDoc.getText();
            String mataikhoan=tfmataikhoan.getText();
           if(mabandoc.length()!=5){
                JOptionPane.showMessageDialog(null, "ma ban doc phai gom 5 ki tu theo dang BDxxx");
                return;}
           if(mataikhoan.length()!=5){
                JOptionPane.showMessageDialog(null, "ma tai khoan phai dom 5 ki tu");return;}
            String b = tfMaBanDoc.getText(0, 2);
            String a = tfmataikhoan.getText(0, 2);
         
            boolean a1 =a.equals("TK");
    
            boolean a2=Character.isDigit(mataikhoan.charAt(2));
            boolean a3=Character.isDigit(mataikhoan.charAt(3));
            boolean a4=Character.isDigit(mataikhoan.charAt(4));
            boolean b1=b.equals("BD");
            boolean b2=Character.isDigit(mabandoc.charAt(2));
            boolean b3=Character.isDigit(mabandoc.charAt(3));
            boolean b4=Character.isDigit(mabandoc.charAt(4));
           
          if ((a1&&a2&&a3&&a4)==false){JOptionPane.showMessageDialog(null, "nhap sai dinh dang cua TK TKxxx");
            return;
          }
            
                
                
                if((b1&&b2&&b3&&b4)==false){JOptionPane.showMessageDialog(null, "nhap sai dinh dang cua ban doc BDxxx");
                        return;}
            if(tfMaBanDoc.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "Chua Nhap Ma Ban Doc");
                    tfMaBanDoc.requestFocus();
                }
              
                    
                    
                  
        } catch (BadLocationException ex) {
            Logger.getLogger(GDThemBanDoc.class.getName()).log(Level.SEVERE, null, ex);
        }
          if(checktrungmabandoc()==true){
                        JOptionPane.showMessageDialog(null,"ma ban doc da ton tai");
                        tfMaBanDoc.requestFocus();
                        return;
                        
                    }
          if(checktrungmataikhoan()==true){
                        JOptionPane.showMessageDialog(null, "ma tai khoan da ton tai");}
                    else  if(checkdacomataikhoan()==false){
                         int result=JOptionPane.showConfirmDialog(null, "Bạn Chưa Đăng Ký Mã Tài Khoản , Bạn có Muôn Đăng Ký");
        if(result==0){new GDDangky1().setVisible(true);}}
                    else   {try {
                        Connection connection = DBConnection.getConnection();
                        String query = "INSERT INTO dbo.BanDoc20173329(MaBanDoc20173329, MATAIKHOAN20173329 ,TENBANDOC20173329 ,DIACHI20173329 ,SODIENTHOAI20173329 ,NGAYSINH20173329) "+
                                "VALUES(?,?,?,?,?,?)";
                        PreparedStatement ps = connection.prepareStatement(query);
                        ps.setString(1, tfMaBanDoc.getText());
                        ps.setString(2, tfmataikhoan.getText());
                        ps.setString(3, tftenbandoc.getText());
                        ps.setString(4, tfdiachi.getText());
                        ps.setString(5, tfsodienthoai.getText());
                        ps.setString(6, tfngaysinh.getText());
                        ps.executeUpdate();
                        showDuLieu();
                        DBConnection.closeConnection(connection);
                        JOptionPane.showMessageDialog(null, "them thanh cong");
                        reset();
                        
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "ban phai nhap nam sinh theo dinh danh mm-dd-yyyy");
                    }
                    }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnQuayLaiActionPerformed
private void checktimkiemmabandoc(){
       
        try {
            String[] arr= {"Mã Bạn Đọc ","Mã Tài Khoản","Tên Bạn Đọc" ,"Địa Chỉ","Số Điện Thoại","Ngày Sinh"};
           
            DefaultTableModel model = new DefaultTableModel(arr, 0);
            Connection connection = DBConnection.getConnection();
            String query = "SELECT * FROM dbo.bandoc20173329 where mabandoc20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tfMaBanDoc.getText());
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                Vector vector = new Vector();
                vector.add(rs.getString("mabandoc20173329"));
                vector.add(rs.getString("mataikhoan20173329"));
                vector.add(rs.getString("TENbandoc20173329"));
                vector.add(rs.getString("diachi20173329"));
                vector.add(rs.getString("sodienthoai20173329"));
                vector.add(rs.getString("ngaysinh20173329"));
                model.addRow(vector);
            }
            DBConnection.closeConnection(connection);
            tableMain.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(GDThemBanDoc.class.getName()).log(Level.SEVERE, null, ex);
        }
            
}
        
     private void checktimkiemtheomataikhoan(){
        try {tableMain.removeAll();
            String[]arr={"Mã Bạn Đọc ","Mã Tài Khoản","Tên Bạn Đọc","Địa Chỉ","Số Điện Thoại","Ngày Sinh" };
            DefaultTableModel model = new DefaultTableModel(arr,0);
            Connection connection = DBConnection.getConnection();
            String query="Select * from dbo.bandoc20173329 where mataikhoan20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tfmataikhoan.getText());
            ResultSet rs =ps.executeQuery();
            while(rs.next()){
            Vector vector = new Vector();
            vector.add(rs.getString("mabandoc20173329"));
            vector.add(rs.getString("mataikhoan20173329"));
            vector.add(rs.getString("TENbandoc20173329"));
            vector.add(rs.getString("diachi20173329"));
            vector.add(rs.getString("sodienthoai20173329"));
            vector.add(rs.getString("ngaysinh20173329"));
            model.addRow(vector);       
            }  DBConnection.closeConnection(connection);
            tableMain.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(GDThemBanDoc.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
     private void checktimkiemtheotenbandoc(){
      
        try {
            String[]arr={"Mã Bạn Đọc ","Mã Tài Khoản","Tên Bạn Đọc","Địa Chỉ","Số Điện Thoại","Ngày Sinh" };
            DefaultTableModel model = new DefaultTableModel(arr,0);
            Connection connection = DBConnection.getConnection();
            String query="Select * from dbo.bandoc20173329 where tenbandoc20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tftenbandoc.getText());
            ResultSet rs =ps.executeQuery();
            while(rs.next()){
                Vector vector = new Vector();
                vector.add(rs.getString("mabandoc20173329"));
                vector.add(rs.getString("mataikhoan20173329"));
                vector.add(rs.getString("TENbandoc20173329"));
                vector.add(rs.getString("diachi20173329"));
                vector.add(rs.getString("sodienthoai20173329"));
                vector.add(rs.getString("ngaysinh20173329"));
                model.addRow(vector);       
            }  DBConnection.closeConnection(connection);
            tableMain.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(GDThemBanDoc.class.getName()).log(Level.SEVERE, null, ex);
        }
        
     }
     private void checktimkiemtheodiachi(){
        try {
            String[]arr={"Mã Bạn Đọc ","Mã Tài Khoản","Tên Bạn Đọc","Địa Chỉ","Số Điện Thoại","Ngày Sinh" };
            DefaultTableModel model = new DefaultTableModel(arr,0);
            Connection connection = DBConnection.getConnection();
            String query="Select * from dbo.bandoc20173329 where diachi20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tfdiachi.getText());
            ResultSet rs =ps.executeQuery();
            while(rs.next()){
            Vector vector = new Vector();
            vector.add(rs.getString("mabandoc20173329"));
            vector.add(rs.getString("mataikhoan20173329"));
            vector.add(rs.getString("TENbandoc20173329"));
            vector.add(rs.getString("diachi20173329"));
            vector.add(rs.getString("sodienthoai20173329"));
            vector.add(rs.getString("ngaysinh20173329"));
            model.addRow(vector);       
            }  DBConnection.closeConnection(connection);
            tableMain.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(GDThemBanDoc.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
    private void btndanhsachbandocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndanhsachbandocActionPerformed
        // TODO add your handling code here:
        showDuLieu();
    }//GEN-LAST:event_btndanhsachbandocActionPerformed

    private void tftenbandocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tftenbandocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tftenbandocActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

     
        
        String a=(String) jComboBox1.getSelectedItem();
      
       if(a.equals("tim kiem theo ma ban doc")){
           if(tfMaBanDoc.getText().equals("")){
               JOptionPane.showMessageDialog(null, "chua nhap ma ban doc can tim kiem"); return;}
       else{checktimkiemmabandoc();return;}
       }else if(a.equals("tim kiem theo ma tai khoan")){if(tfmataikhoan.getText().equals("")){
       JOptionPane.showMessageDialog(null, "chua nhap ma tai khoan ban tim kiem");return;}
       else{
       checktimkiemtheomataikhoan(); return;}}
       else if (a.equals("tim kiem theo ten ban doc")){
           if (tftenbandoc.getText().equals("")){JOptionPane.showMessageDialog(null, "chua nhap ten ban doc ma ban can tim kiem"); return;
          
               
           }else{checktimkiemtheotenbandoc();return;}
       }
       else if (a.equals("tim kiem theo dia chi")){
           if (tfdiachi.getText().equals("")){JOptionPane.showMessageDialog(null, "chua nhap NXB an can tim kiem");return;
               
           }else{checktimkiemtheodiachi();return;}
}
    }//GEN-LAST:event_jComboBox1ActionPerformed
 private void reset(){
    tfMaBanDoc.setText("");
    tfdiachi.setText("");
    tfmataikhoan.setText("");
    tfsodienthoai.setText("");
    tfngaysinh.setText("");
    tfdiachi.setText("");
    tftenbandoc.setText("");
    }
    private boolean checktrungmabandoc(){
    
      try {
            Connection connection = DBConnection.getConnection();
            String query = "SELECT * FROM dbo.BanDoc20173329 where MABANDOC20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tfMaBanDoc.getText());
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }return false;
    
}
    private boolean checktrungmataikhoan(){
    
      try {
            Connection connection = DBConnection.getConnection();
            String query = "SELECT * FROM dbo.BanDoc20173329 where mataikhoan20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tfmataikhoan.getText());
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }return false;
    
}
      private boolean checkdacomataikhoan(){
    
      try {
            Connection connection = DBConnection.getConnection();
            String query = "SELECT * FROM dbo.taikhoan20173329 where mataikhoan20173329 = ?";
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, tfmataikhoan.getText());
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyBangSach.class.getName()).log(Level.SEVERE, null, ex);
        }return false;
    
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GDThemBanDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GDThemBanDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GDThemBanDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GDThemBanDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GDThemBanDoc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btndanhsachbandoc;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMain;
    private javax.swing.JTextField tfMaBanDoc;
    private javax.swing.JTextField tfdiachi;
    private javax.swing.JTextField tfmataikhoan;
    private javax.swing.JTextField tfngaysinh;
    private javax.swing.JTextField tfsodienthoai;
    private javax.swing.JTextField tftenbandoc;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
      if(e.getSource().equals(btnQuayLai)){
      btnquaylaiclick();}
    }
    public void btnquaylaiclick(){
   new GDQLBanDoc().setVisible(true);
   this.dispose();
            }
    public void load(){
    jComboBox1.addItem("tim kiem theo ma ban doc");
    jComboBox1.addItem("tim kiem theo ma tai khoan");
    jComboBox1.addItem("tim kiem theo ten ban doc");
    jComboBox1.addItem("tim kiem theo dia chi");
    }
}
